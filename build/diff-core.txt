diff --git a/dataservicebroker/src/main/java/kr/re/keti/sc/dataservicebroker/common/code/Constants.java b/dataservicebroker/src/main/java/kr/re/keti/sc/dataservicebroker/common/code/Constants.java
index 9d25ed5..423b41d 100644
--- a/dataservicebroker/src/main/java/kr/re/keti/sc/dataservicebroker/common/code/Constants.java
+++ b/dataservicebroker/src/main/java/kr/re/keti/sc/dataservicebroker/common/code/Constants.java
@@ -11,7 +11,7 @@ public class Constants {
     /** Content Date Format */
     public static final String CONTENT_DATE_FORMAT = "yyyy-MM-dd'T'HH:mm:ss.SSSXXX";
 
-    
+
     public static final String[] HIVE_MULTI_DATE_FORMATS = new String[] {
             "yyyy-MM-dd HH:mm:ss",
             "yyyy-MM-dd HH:mm:ss.S",
@@ -21,9 +21,9 @@ public class Constants {
             "yyyy-MM-dd HH:mm:ss.SSSSS",
             "yyyy-MM-dd HH:mm:ss.SSSSSS"
         };
-    
+
     public static final String[] MULTI_DATE_FORMATS = new String[] {
-            "yyyy-MM-dd HH:mm:ss.XXX",
+            "yyyy-MM-dd'T'HH:mm:ssXXX",
             "yyyy-MM-dd'T'HH:mm:ss.SXXX",
             "yyyy-MM-dd'T'HH:mm:ss.SSXXX",
             "yyyy-MM-dd'T'HH:mm:ss.SSSXXX",
@@ -32,15 +32,15 @@ public class Constants {
             "yyyy-MM-dd'T'HH:mm:ss.SSSSSSXXX",
             "yyyy-MM-dd'T'HH:mm:ss,SSSXXX" // 하위 호환
         };
-    
+
     /** PostgreSQL SELECT Date Format */
     public static final String POSTGRES_DATE_FORMAT = "yyyy-MM-dd' 'HH:mm:ss";
     /** PostgreSQL INSERT Date Format */
     public static final String POSTGRES_TIMESTAMP_FORMAT = "yyyy-MM-dd HH:mm:ss.SSS";
-    
+
     /** Hive INSERT Date Format */
     public static final String HIVE_TIMESTAMP_FORMAT = "yyyy-MM-dd HH:mm:ss.SSS";
-    
+
     /** application/ld+json Key */
     public static final String APPLICATION_LD_JSON_VALUE = "application/ld+json";
     public static final String APPLICATION_JSON_VALUE = "application/json";
@@ -77,5 +77,5 @@ public class Constants {
 
     public static final String LOCATION_ATTR_DEFAULT_NAME = "location";
     public static final String PATIAL_HIST_TABLE_SUFFIX = null;
-    
+
 }
diff --git a/dataservicebroker/src/main/java/kr/re/keti/sc/dataservicebroker/entities/controller/http/EntityController.java b/dataservicebroker/src/main/java/kr/re/keti/sc/dataservicebroker/entities/controller/http/EntityController.java
index ebef9f5..ee90a02 100644
--- a/dataservicebroker/src/main/java/kr/re/keti/sc/dataservicebroker/entities/controller/http/EntityController.java
+++ b/dataservicebroker/src/main/java/kr/re/keti/sc/dataservicebroker/entities/controller/http/EntityController.java
@@ -14,7 +14,6 @@ import org.springframework.beans.factory.annotation.Value;
 import org.springframework.http.HttpHeaders;
 import org.springframework.http.HttpStatus;
 import org.springframework.http.MediaType;
-import org.springframework.util.StringUtils;
 import org.springframework.web.bind.annotation.DeleteMapping;
 import org.springframework.web.bind.annotation.GetMapping;
 import org.springframework.web.bind.annotation.ModelAttribute;
@@ -1094,8 +1093,6 @@ public class EntityController {
      * @param operation
      * @param id
      * @return
-     * @throws JsonProcessingException
-     * @throws JsonMappingException
      */
     private List<IngestMessageVO> makeRequestMessageVO( HttpServletRequest request,
                                                         String requestBody,
@@ -1103,7 +1100,7 @@ public class EntityController {
                                                         String requestUri,
                                                         String id,
                                                         List<String> links,
-                                                        String contentType) throws JsonMappingException, JsonProcessingException {
+                                                        String contentType) {
         return makeRequestMessageVO(request, requestBody, operation, requestUri, id, null, links, contentType);
     }
 
@@ -1114,8 +1111,6 @@ public class EntityController {
      * @param operation
      * @param id
      * @return
-     * @throws JsonProcessingException
-     * @throws JsonMappingException
      */
     private List<IngestMessageVO> makeRequestMessageVO(HttpServletRequest request,
                                                        String requestBody,
@@ -1124,26 +1119,15 @@ public class EntityController {
                                                        String id,
                                                        List<OperationOption> operationOptions,
                                                        List<String> links,
-                                                       String contentType) throws JsonMappingException, JsonProcessingException {
+                                                       String contentType) {
 
 
         String entityType = extractEntityTypeById(id);
         String datasetId = extractDatasetIdById(id);
-        IngestMessageVO requestMessageVO = new IngestMessageVO();
-        if (operation != Operation.DELETE_ENTITY) {
-            /* 단건 Delete 경우 body없으므로 JacksonMapper 적용X */
-            Map<String, Object> obj = objectMapper.readValue(requestBody, Map.class);
-            if(StringUtils.isEmpty(id))
-                id = obj.get(DefaultAttributeKey.ID.getCode()).toString();
-            if(StringUtils.isEmpty(entityType))
-                entityType = obj.get(DefaultAttributeKey.TYPE.getCode()).toString();
-            if(StringUtils.isEmpty(datasetId))
-                datasetId = obj.get(DefaultAttributeKey.DATASET_ID.getCode()).toString();
-            
-        } 
-        
+
         aasSVC.checkCUDAccessRule(request, datasetId, operation);
-        
+
+        IngestMessageVO requestMessageVO = new IngestMessageVO();
         requestMessageVO.setEntityType(entityType);
         requestMessageVO.setContent(requestBody);
         requestMessageVO.setDatasetId(datasetId);
diff --git a/docker-compose/setup-db.sql b/docker-compose/setup-db.sql
index 3bfeeb3..1a8c30f 100644
--- a/docker-compose/setup-db.sql
+++ b/docker-compose/setup-db.sql
@@ -1200,3 +1200,19 @@ INSERT INTO datacore_ui.MENU_BASE(ID, LANG_CD, NAME, URL, UP_MENU_ID, SORT_ORDER
 INSERT INTO datacore_ui.MENU_BASE(ID, LANG_CD, NAME, URL, UP_MENU_ID, SORT_ORDER, ENABLED, LEVEL, CREATE_DATETIME, CREATOR_ID) VALUES('DATACORE_701', 'en', 'Code', '/codeManageView', 'DATACORE_700', 1, true, 2, now(), 'admin');
 INSERT INTO datacore_ui.MENU_BASE(ID, LANG_CD, NAME, URL, UP_MENU_ID, SORT_ORDER, ENABLED, LEVEL, CREATE_DATETIME, CREATOR_ID) VALUES('DATACORE_702', 'en', 'Menu', '/menuManageView', 'DATACORE_700', 2, true, 2, now(), 'admin');
 INSERT INTO datacore_ui.MENU_BASE(ID, LANG_CD, NAME, URL, UP_MENU_ID, SORT_ORDER, ENABLED, LEVEL, CREATE_DATETIME, CREATOR_ID) VALUES('DATACORE_703', 'en', 'Menu Auth', '/menuRoleManageView', 'DATACORE_700', 3, true, 2, now(), 'admin');
+
+-- 2023-01-02 기본 사용자(coreadmin)용 메뉴 접근권한 설정
+INSERT INTO datacore_ui.MENU_ROLE_BASE(ID, NAME, ENABLED, CREATE_DATETIME) VALUES('Core_Admin', 'Core_Admin', true, NOW());
+INSERT INTO datacore_ui.MENU_ROLE_RELATION_BASE(MENU_ID, MENU_ROLE_ID, CREATE_DATETIME) VALUES('DATACORE_100', 'Core_Admin', NOW());
+INSERT INTO datacore_ui.MENU_ROLE_RELATION_BASE(MENU_ID, MENU_ROLE_ID, CREATE_DATETIME) VALUES('DATACORE_200', 'Core_Admin', NOW());
+INSERT INTO datacore_ui.MENU_ROLE_RELATION_BASE(MENU_ID, MENU_ROLE_ID, CREATE_DATETIME) VALUES('DATACORE_300', 'Core_Admin', NOW());
+INSERT INTO datacore_ui.MENU_ROLE_RELATION_BASE(MENU_ID, MENU_ROLE_ID, CREATE_DATETIME) VALUES('DATACORE_400', 'Core_Admin', NOW());
+INSERT INTO datacore_ui.MENU_ROLE_RELATION_BASE(MENU_ID, MENU_ROLE_ID, CREATE_DATETIME) VALUES('DATACORE_500', 'Core_Admin', NOW());
+INSERT INTO datacore_ui.MENU_ROLE_RELATION_BASE(MENU_ID, MENU_ROLE_ID, CREATE_DATETIME) VALUES('DATACORE_600', 'Core_Admin', NOW());
+INSERT INTO datacore_ui.MENU_ROLE_RELATION_BASE(MENU_ID, MENU_ROLE_ID, CREATE_DATETIME) VALUES('DATACORE_700', 'Core_Admin', NOW());
+INSERT INTO datacore_ui.MENU_ROLE_RELATION_BASE(MENU_ID, MENU_ROLE_ID, CREATE_DATETIME) VALUES('DATACORE_701', 'Core_Admin', NOW());
+INSERT INTO datacore_ui.MENU_ROLE_RELATION_BASE(MENU_ID, MENU_ROLE_ID, CREATE_DATETIME) VALUES('DATACORE_702', 'Core_Admin', NOW());
+INSERT INTO datacore_ui.MENU_ROLE_RELATION_BASE(MENU_ID, MENU_ROLE_ID, CREATE_DATETIME) VALUES('DATACORE_703', 'Core_Admin', NOW());
+
+-- 2023-01-11 hbase 저장소 삭제
+DELETE FROM datacore_ui.CODE_BASE WHERE CODE_ID = 'hbase';
